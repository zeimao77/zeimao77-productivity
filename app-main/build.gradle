plugins {
    id 'java'
    id 'application'
}

group 'com.zeimao77'
version '1.0.0'

repositories {

    maven {
        name 'aliyun'
        credentials {
            username publishing_maven_aliyun_username
            password publishing_maven_aliyun_password
        }
        url publishing_maven_aliyun_url
    }
    maven {
        url 'https://maven.aliyun.com/repository/central'
    }
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation group: 'top.zeimao77',name:'zeimao77-productivity',version: '2.2.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.23.1'
    implementation group: 'com.guicedee.services', name: 'commons-beanutils', version: '1.2.2.1'
    implementation group: 'com.github.mwiede', name: 'jsch', version: '0.2.21'
}

application {
    mainClass = 'com.zeimao77.Main'
    applicationDefaultJvmArgs = ['-Dlog.level=DEBUG','-Dlog.file=app-main.log']
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

jar {
    archiveFileName = 'app-main.jar'
    String cp = configurations.runtimeClasspath.collect {it.getName()}.join(" ")
    manifest {
        attributes("Main-Class": "com.zeimao77.Main")
        attributes("Class-Path": cp)
    }
}

task collectlib(type:Copy) {
    dependsOn('jar')

    configurations.runtimeClasspath.collect {
        var t = layout.buildDirectory.asFile.get().getPath() + "\\libs"
        from it.getAbsoluteFile()
        into t
    }
}
